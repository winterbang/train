require 'mina/rails'
require 'mina/git'
require 'mina/chruby'  # for rbenv support. (https://rbenv.org)
# require 'mina/rbenv'  # for rbenv support. (https://rbenv.org)
# require 'mina/rvm'    # for rvm support. (https://rvm.io)
require 'mina/multistage'
require 'mina/puma'

# Basic settings:
#   domain       - The hostname to SSH to.
#   deploy_to    - Path to deploy into.
#   repository   - Git repo to clone from. (needed by mina/git)
#   branch       - Branch name to deploy. (needed by mina/git)

set :application_name, '<%= app_name -%>'
# set :domain, 'deploy@47.93.21.147'
set :deploy_to, '/mnt/www/<%= app_name %>'
set :repository, '<%= git_repo_specified? ? git_repo_url : 'TODO' -%>'
set :branch, 'master'
set :chruby_path, '/usr/local/share/chruby/chruby.sh'
set :bundle_bin, '/opt/rubies/ruby-2.5.0/bin/bundle'
# Optional settings:
#   set :user, 'foobar'          # Username in the server to SSH to.
#   set :port, '30000'           # SSH port number.
#   set :forward_agent, true     # SSH forward_agent.

# shared dirs and files will be symlinked into the app-folder by the 'deploy:link_shared_paths' step.
# set :shared_dirs, fetch(:shared_dirs, []).push('somedir')
# set :shared_files, fetch(:shared_files, []).push('config/database.yml', 'config/secrets.yml')
set :shared_dirs, fetch(:shared_dirs, []).push('log', 'public/uploads', 'tmp')
set :shared_files, fetch(:shared_files, []).push('config/database.yml', 'config/secrets.yml', 'config/application.yml')

# This task is the environment that is loaded for all remote run commands, such as
# `mina deploy` or `mina rake`.
task :environment do
  # If you're using rbenv, use this to load the rbenv environment.
  # Be sure to commit your .ruby-version or .rbenv-version to your repository.
  # invoke :'rbenv:lo[ruby-1.9.3-p392]ad'
  invoke :chruby, 'ruby-2.5.0'

  # For those using RVM, use this to load an RVM version@gemset.
  # invoke :'rvm:use', 'ruby-1.9.3-p125@default'
end

# Put any custom commands you need to run at setup
# All paths in `shared_dirs` and `shared_paths` will be created on their own.
task :setup => :environment do
  # command %{rbenv install 2.4.1}
  ['log', 'config', 'public/uploads', 'tmp/pids', 'tmp/sockets'].each do |dir|
    command %{mkdir -p "#{fetch(:deploy_to)}/shared/#{dir}"}
    command %{chmod g+rx,u+rwx "#{fetch(:deploy_to)}/shared/#{dir}"}
  end

  ['config/database.yml', 'config/secrets.yml', 'config/puma.rb', 'config/application.yml'].each do |file|
    command %{touch "#{fetch(:deploy_to)}/shared/#{file}"}
    comment %{Be sure to edit 'shared/#{file}'.}
    name = file.split('/').last
    path = File.join(File.dirname(__FILE__), 'deploy/config/'+name)
    cmd =  "scp #{path} #{fetch(:domain)}:#{fetch(:deploy_to)}/shared/#{file}"
    result = %x[#{cmd}]
  end
end

desc "Deploys the current version to the server."
task :deploy => :environment do
  # uncomment this line to make sure you pushed your local branch to the remote origin
  # invoke :'git:ensure_pushed'
  deploy do
    # Put things that will set up an empty directory into a fully set-up
    # instance of your project.
    invoke :'git:clone'
    invoke :'deploy:link_shared_paths'
    invoke :'bundle:install'
    # invoke :'rails:db_create' # 仅首次部署打开，创建数据库
    invoke :'rails:db_migrate'
    # invoke :'rails:assets_precompile'
    invoke :'deploy:cleanup'

    on :launch do
      in_path(fetch(:current_path)) do
        command %{mkdir -p tmp/}
        command %{touch tmp/restart.txt}
        command  %[echo "-----> # touch restart.txt finish."]
      end
      # 重启puma
      invoke :'puma:phased_restart'
      # invoke :'sidekiq:restart'
    end
  end

  # you can use `run :local` to run tasks on local machine before of after the deploy scripts
  # run(:local){ say 'done' }
end

desc "Seed data to the database"
task :seed => :environment do
  command "cd #{fetch(:current_path)}"
  command "bundle exec rake db:seed RAILS_ENV=production"
  command  %[echo "-----> ### Rake Seeding Completed."]
end

namespace :config do
  desc '更新nginx配置'
  task :nginx do
    path = File.join(File.dirname(__FILE__), 'deploy/nginx.conf')
    cmd =  "scp -p #{path} #{fetch(:domain)}:/etc/nginx/sites-available/nginx.conf"
    result = %x[#{cmd}]
  end

  desc '更新mammon配置文件'
  task :application do
    path = File.join(File.dirname(__FILE__), 'deploy/config/application.yml')
    cmd =  "scp #{path} #{fetch(:domain)}:#{fetch(:deploy_to)}/shared/config/application.yml"
    result = %x[#{cmd}]
    print_info result
  end
end

# sudo service nginx restart
# mina 'rake[boniu]' on=production

# desc "RESTART SERVICE"
# task :restart => :environment do
#   command "cd #{fetch(:current_path)}"
#   command %{mkdir -p tmp/}
#   command %{touch tmp/restart.txt}
#   command  %[echo "-----> touch restart.txt finish."]
# end

# For help in making your deploy script, see the Mina documentation:
#
#  - https://github.com/mina-deploy/mina/tree/master/docs
